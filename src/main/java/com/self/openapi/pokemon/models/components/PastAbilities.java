/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.self.openapi.pokemon.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.self.openapi.pokemon.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public class PastAbilities {

    @JsonProperty("abilities")
    private List<PokemonDetailAbilities> abilities;

    @JsonProperty("generation")
    private Generation generation;

    @JsonCreator
    public PastAbilities(
            @JsonProperty("abilities") List<PokemonDetailAbilities> abilities,
            @JsonProperty("generation") Generation generation) {
        Utils.checkNotNull(abilities, "abilities");
        Utils.checkNotNull(generation, "generation");
        this.abilities = abilities;
        this.generation = generation;
    }

    @JsonIgnore
    public List<PokemonDetailAbilities> abilities() {
        return abilities;
    }

    @JsonIgnore
    public Generation generation() {
        return generation;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PastAbilities withAbilities(List<PokemonDetailAbilities> abilities) {
        Utils.checkNotNull(abilities, "abilities");
        this.abilities = abilities;
        return this;
    }

    public PastAbilities withGeneration(Generation generation) {
        Utils.checkNotNull(generation, "generation");
        this.generation = generation;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PastAbilities other = (PastAbilities) o;
        return 
            Objects.deepEquals(this.abilities, other.abilities) &&
            Objects.deepEquals(this.generation, other.generation);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            abilities,
            generation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PastAbilities.class,
                "abilities", abilities,
                "generation", generation);
    }
    
    public final static class Builder {
 
        private List<PokemonDetailAbilities> abilities;
 
        private Generation generation;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder abilities(List<PokemonDetailAbilities> abilities) {
            Utils.checkNotNull(abilities, "abilities");
            this.abilities = abilities;
            return this;
        }

        public Builder generation(Generation generation) {
            Utils.checkNotNull(generation, "generation");
            this.generation = generation;
            return this;
        }
        
        public PastAbilities build() {
            return new PastAbilities(
                abilities,
                generation);
        }
    }
}

