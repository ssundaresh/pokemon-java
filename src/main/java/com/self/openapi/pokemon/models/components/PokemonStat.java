/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.self.openapi.pokemon.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.self.openapi.pokemon.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class PokemonStat {

    @JsonProperty("base_stat")
    private long baseStat;

    @JsonProperty("effort")
    private long effort;

    @JsonProperty("stat")
    private StatSummary stat;

    @JsonCreator
    public PokemonStat(
            @JsonProperty("base_stat") long baseStat,
            @JsonProperty("effort") long effort,
            @JsonProperty("stat") StatSummary stat) {
        Utils.checkNotNull(baseStat, "baseStat");
        Utils.checkNotNull(effort, "effort");
        Utils.checkNotNull(stat, "stat");
        this.baseStat = baseStat;
        this.effort = effort;
        this.stat = stat;
    }

    @JsonIgnore
    public long baseStat() {
        return baseStat;
    }

    @JsonIgnore
    public long effort() {
        return effort;
    }

    @JsonIgnore
    public StatSummary stat() {
        return stat;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PokemonStat withBaseStat(long baseStat) {
        Utils.checkNotNull(baseStat, "baseStat");
        this.baseStat = baseStat;
        return this;
    }

    public PokemonStat withEffort(long effort) {
        Utils.checkNotNull(effort, "effort");
        this.effort = effort;
        return this;
    }

    public PokemonStat withStat(StatSummary stat) {
        Utils.checkNotNull(stat, "stat");
        this.stat = stat;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PokemonStat other = (PokemonStat) o;
        return 
            Objects.deepEquals(this.baseStat, other.baseStat) &&
            Objects.deepEquals(this.effort, other.effort) &&
            Objects.deepEquals(this.stat, other.stat);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            baseStat,
            effort,
            stat);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PokemonStat.class,
                "baseStat", baseStat,
                "effort", effort,
                "stat", stat);
    }
    
    public final static class Builder {
 
        private Long baseStat;
 
        private Long effort;
 
        private StatSummary stat;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder baseStat(long baseStat) {
            Utils.checkNotNull(baseStat, "baseStat");
            this.baseStat = baseStat;
            return this;
        }

        public Builder effort(long effort) {
            Utils.checkNotNull(effort, "effort");
            this.effort = effort;
            return this;
        }

        public Builder stat(StatSummary stat) {
            Utils.checkNotNull(stat, "stat");
            this.stat = stat;
            return this;
        }
        
        public PokemonStat build() {
            return new PokemonStat(
                baseStat,
                effort,
                stat);
        }
    }
}

