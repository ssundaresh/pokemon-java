/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.self.openapi.pokemon.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.self.openapi.pokemon.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public class PastTypes {

    @JsonProperty("generation")
    private PokemonDetailGeneration generation;

    @JsonProperty("types")
    private List<PokemonDetailTypes> types;

    @JsonCreator
    public PastTypes(
            @JsonProperty("generation") PokemonDetailGeneration generation,
            @JsonProperty("types") List<PokemonDetailTypes> types) {
        Utils.checkNotNull(generation, "generation");
        Utils.checkNotNull(types, "types");
        this.generation = generation;
        this.types = types;
    }

    @JsonIgnore
    public PokemonDetailGeneration generation() {
        return generation;
    }

    @JsonIgnore
    public List<PokemonDetailTypes> types() {
        return types;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PastTypes withGeneration(PokemonDetailGeneration generation) {
        Utils.checkNotNull(generation, "generation");
        this.generation = generation;
        return this;
    }

    public PastTypes withTypes(List<PokemonDetailTypes> types) {
        Utils.checkNotNull(types, "types");
        this.types = types;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PastTypes other = (PastTypes) o;
        return 
            Objects.deepEquals(this.generation, other.generation) &&
            Objects.deepEquals(this.types, other.types);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            generation,
            types);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PastTypes.class,
                "generation", generation,
                "types", types);
    }
    
    public final static class Builder {
 
        private PokemonDetailGeneration generation;
 
        private List<PokemonDetailTypes> types;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder generation(PokemonDetailGeneration generation) {
            Utils.checkNotNull(generation, "generation");
            this.generation = generation;
            return this;
        }

        public Builder types(List<PokemonDetailTypes> types) {
            Utils.checkNotNull(types, "types");
            this.types = types;
            return this;
        }
        
        public PastTypes build() {
            return new PastTypes(
                generation,
                types);
        }
    }
}

