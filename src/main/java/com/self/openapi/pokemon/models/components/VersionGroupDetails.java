/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.self.openapi.pokemon.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.self.openapi.pokemon.utils.Utils;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class VersionGroupDetails {

    @JsonProperty("level_learned_at")
    private int levelLearnedAt;

    @JsonProperty("move_learn_method")
    private MoveLearnMethod moveLearnMethod;

    @JsonProperty("version_group")
    private VersionGroup versionGroup;

    @JsonCreator
    public VersionGroupDetails(
            @JsonProperty("level_learned_at") int levelLearnedAt,
            @JsonProperty("move_learn_method") MoveLearnMethod moveLearnMethod,
            @JsonProperty("version_group") VersionGroup versionGroup) {
        Utils.checkNotNull(levelLearnedAt, "levelLearnedAt");
        Utils.checkNotNull(moveLearnMethod, "moveLearnMethod");
        Utils.checkNotNull(versionGroup, "versionGroup");
        this.levelLearnedAt = levelLearnedAt;
        this.moveLearnMethod = moveLearnMethod;
        this.versionGroup = versionGroup;
    }

    @JsonIgnore
    public int levelLearnedAt() {
        return levelLearnedAt;
    }

    @JsonIgnore
    public MoveLearnMethod moveLearnMethod() {
        return moveLearnMethod;
    }

    @JsonIgnore
    public VersionGroup versionGroup() {
        return versionGroup;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public VersionGroupDetails withLevelLearnedAt(int levelLearnedAt) {
        Utils.checkNotNull(levelLearnedAt, "levelLearnedAt");
        this.levelLearnedAt = levelLearnedAt;
        return this;
    }

    public VersionGroupDetails withMoveLearnMethod(MoveLearnMethod moveLearnMethod) {
        Utils.checkNotNull(moveLearnMethod, "moveLearnMethod");
        this.moveLearnMethod = moveLearnMethod;
        return this;
    }

    public VersionGroupDetails withVersionGroup(VersionGroup versionGroup) {
        Utils.checkNotNull(versionGroup, "versionGroup");
        this.versionGroup = versionGroup;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VersionGroupDetails other = (VersionGroupDetails) o;
        return 
            Objects.deepEquals(this.levelLearnedAt, other.levelLearnedAt) &&
            Objects.deepEquals(this.moveLearnMethod, other.moveLearnMethod) &&
            Objects.deepEquals(this.versionGroup, other.versionGroup);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            levelLearnedAt,
            moveLearnMethod,
            versionGroup);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VersionGroupDetails.class,
                "levelLearnedAt", levelLearnedAt,
                "moveLearnMethod", moveLearnMethod,
                "versionGroup", versionGroup);
    }
    
    public final static class Builder {
 
        private Integer levelLearnedAt;
 
        private MoveLearnMethod moveLearnMethod;
 
        private VersionGroup versionGroup;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder levelLearnedAt(int levelLearnedAt) {
            Utils.checkNotNull(levelLearnedAt, "levelLearnedAt");
            this.levelLearnedAt = levelLearnedAt;
            return this;
        }

        public Builder moveLearnMethod(MoveLearnMethod moveLearnMethod) {
            Utils.checkNotNull(moveLearnMethod, "moveLearnMethod");
            this.moveLearnMethod = moveLearnMethod;
            return this;
        }

        public Builder versionGroup(VersionGroup versionGroup) {
            Utils.checkNotNull(versionGroup, "versionGroup");
            this.versionGroup = versionGroup;
            return this;
        }
        
        public VersionGroupDetails build() {
            return new VersionGroupDetails(
                levelLearnedAt,
                moveLearnMethod,
                versionGroup);
        }
    }
}

